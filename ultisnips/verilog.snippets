# ===
# === CopyRight 
snippet copyright "Copyright of this file" b
/*=============================================================
* 	Copyright (C) `date +%Y` USTC All rights reserved.
* 	
* 	filename : `!v expand('%:t')`
* 	Author: Wei Jinsong
* 	Mail: vitus@mail.ustc.edu.cn
* 	Date `date +%Y-%m-%d`
* 	Abstract 
* 		${0}
*
=============================================================*/
endsnippet

# === 
# === module create
snippet mod "module ...() ... endmodule " b
module ${1:name}(${2:// port});


${0:// design}

endmodule
endsnippet

# === module with parameter
snippet modp "module ... #(...)(...)... endmodule" b
module ${1:name} #(
${2:// parameter}
)(
${3:// port}
);


${0:// design}

endmodule
endsnippet

# === always create
snippet alw "always @(....)" b
always @(${1://trigger})
	${0:// body}
endsnippet

snippet alwp "always @(...) begin end" b
always @(${1://trigger})
begin
	${0:// body}
end
endsnippet

snippet always "always @(posedge ${1:clk} or negedge ${2:nrst})" b
always @(posedge ${1:clk} or negedge ${2:nrst})
begin
	if (~${2::nrst}) begin
		${3:// reset}
	end else begin
		${0:// body}	
	end
end
endsnippet

# === switch 
snippet case "case(...) \n...\n endcase"
case(${1})
	${0:// body}

	default : 
		${2:// default}
endcase
endsnippet

# === if

# === generate
snippet forg "generate for(...) ... endgenerate"
generate
	genvar ${1:// genvar}
	for (${2://range})
	begin:x_${3:name}
		${0:/body}
	end
endgenerate
endsnippet

# === timescale
snippet time "Description" b
\`timescale ${1}/${2}
${0}
endsnippet

